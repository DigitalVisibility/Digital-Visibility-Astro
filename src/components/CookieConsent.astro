---
// CookieConsent.astro - GDPR/CCPA compliant cookie consent banner
---

<div id="cookie-consent-banner" class="fixed bottom-4 left-4 max-w-sm bg-white border border-gray-200 rounded-lg shadow-xl z-50 transform -translate-x-full transition-transform duration-300 ease-in-out" style="display: none;">
  <div class="p-4">
    <div class="space-y-4">

      <!-- Cookie Notice Text -->
      <div>
        <div class="flex items-start gap-3 mb-3">
          <div class="flex-shrink-0 mt-1">
            <svg class="w-4 h-4 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
            </svg>
          </div>
          <div>
            <h3 class="text-sm font-semibold text-gray-900 mb-1">We value your privacy</h3>
            <p class="text-xs text-gray-600 leading-relaxed">
              We use cookies including Google Analytics to improve your experience.
              <a href="/privacy-policy/" class="text-blue-600 hover:text-blue-800 underline font-medium">Learn more</a>
            </p>
          </div>
        </div>
      </div>

      <!-- Cookie Controls -->
      <div class="space-y-2">
        <!-- Accept Button (Primary) -->
        <button
          id="accept-cookies-btn"
          class="w-full px-3 py-2 text-xs font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors"
        >
          Accept All
        </button>

        <!-- Secondary Actions -->
        <div class="flex gap-2">
          <button
            id="reject-cookies-btn"
            class="flex-1 px-3 py-1.5 text-xs font-medium text-gray-600 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors"
          >
            Reject
          </button>

          <button
            id="cookie-settings-btn"
            class="flex-1 px-3 py-1.5 text-xs font-medium text-gray-600 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 transition-colors"
          >
            Settings
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Cookie Settings Modal -->
<div id="cookie-settings-modal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
            <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4" id="modal-title">
              Cookie Preferences
            </h3>

            <div class="space-y-4">

              <!-- Essential Cookies -->
              <div class="border rounded-lg p-4">
                <div class="flex items-center justify-between mb-2">
                  <h4 class="text-sm font-semibold text-gray-900">Essential Cookies</h4>
                  <span class="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded">Always Active</span>
                </div>
                <p class="text-sm text-gray-600">
                  Required for basic site functionality, security, and remembering your preferences.
                </p>
              </div>

              <!-- Analytics Cookies -->
              <div class="border rounded-lg p-4">
                <div class="flex items-center justify-between mb-2">
                  <h4 class="text-sm font-semibold text-gray-900">Analytics Cookies</h4>
                  <label class="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" id="analytics-toggle" class="sr-only peer">
                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                  </label>
                </div>
                <p class="text-sm text-gray-600">
                  Help us understand how visitors interact with our website through Google Analytics. This data is anonymized and helps us improve your experience.
                </p>
              </div>

              <!-- Marketing Cookies -->
              <div class="border rounded-lg p-4">
                <div class="flex items-center justify-between mb-2">
                  <h4 class="text-sm font-semibold text-gray-900">Marketing Cookies</h4>
                  <label class="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" id="marketing-toggle" class="sr-only peer">
                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                  </label>
                </div>
                <p class="text-sm text-gray-600">
                  Used to deliver personalized advertisements and measure the effectiveness of our marketing campaigns.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button
          id="save-preferences-btn"
          type="button"
          class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm"
        >
          Save Preferences
        </button>
        <button
          id="cancel-settings-btn"
          type="button"
          class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"
        >
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<script>
// Cookie Consent Manager
class CookieConsentManager {
  constructor() {
    this.CONSENT_KEY = 'digitalvisibility_cookie_consent';
    this.CONSENT_VERSION = '1.0';
    this.banner = document.getElementById('cookie-consent-banner');
    this.modal = document.getElementById('cookie-settings-modal');

    this.initializeEventListeners();
    this.checkConsentStatus();
  }

  initializeEventListeners() {
    // Banner buttons
    document.getElementById('accept-cookies-btn')?.addEventListener('click', () => this.acceptAllCookies());
    document.getElementById('reject-cookies-btn')?.addEventListener('click', () => this.rejectAllCookies());
    document.getElementById('cookie-settings-btn')?.addEventListener('click', () => this.openSettings());

    // Modal buttons
    document.getElementById('save-preferences-btn')?.addEventListener('click', () => this.savePreferences());
    document.getElementById('cancel-settings-btn')?.addEventListener('click', () => this.closeSettings());

    // Modal overlay click to close
    this.modal?.addEventListener('click', (e) => {
      if (e.target === this.modal) this.closeSettings();
    });
  }

  checkConsentStatus() {
    const consent = this.getConsent();

    if (!consent || consent.version !== this.CONSENT_VERSION) {
      this.showBanner();
    } else {
      this.applyCookieSettings(consent);
    }
  }

  showBanner() {
    if (this.banner) {
      this.banner.style.display = 'block';
      setTimeout(() => {
        this.banner.classList.remove('-translate-x-full');
      }, 100);
    }
  }

  hideBanner() {
    if (this.banner) {
      this.banner.classList.add('-translate-x-full');
      setTimeout(() => {
        this.banner.style.display = 'none';
      }, 300);
    }
  }

  openSettings() {
    const consent = this.getConsent();

    // Set current preferences in modal
    document.getElementById('analytics-toggle').checked = consent?.analytics || false;
    document.getElementById('marketing-toggle').checked = consent?.marketing || false;

    this.modal?.classList.remove('hidden');
  }

  closeSettings() {
    this.modal?.classList.add('hidden');
  }

  acceptAllCookies() {
    const consent = {
      version: this.CONSENT_VERSION,
      timestamp: new Date().toISOString(),
      essential: true,
      analytics: true,
      marketing: true
    };

    this.saveConsent(consent);
    this.applyCookieSettings(consent);
    this.hideBanner();
  }

  rejectAllCookies() {
    const consent = {
      version: this.CONSENT_VERSION,
      timestamp: new Date().toISOString(),
      essential: true,
      analytics: false,
      marketing: false
    };

    this.saveConsent(consent);
    this.applyCookieSettings(consent);
    this.hideBanner();
  }

  savePreferences() {
    const consent = {
      version: this.CONSENT_VERSION,
      timestamp: new Date().toISOString(),
      essential: true,
      analytics: document.getElementById('analytics-toggle').checked,
      marketing: document.getElementById('marketing-toggle').checked
    };

    this.saveConsent(consent);
    this.applyCookieSettings(consent);
    this.closeSettings();
    this.hideBanner();
  }

  saveConsent(consent) {
    try {
      localStorage.setItem(this.CONSENT_KEY, JSON.stringify(consent));
    } catch (e) {
      console.warn('Unable to save cookie consent preferences');
    }
  }

  getConsent() {
    try {
      const consent = localStorage.getItem(this.CONSENT_KEY);
      return consent ? JSON.parse(consent) : null;
    } catch (e) {
      return null;
    }
  }

  applyCookieSettings(consent) {
    // Load Google Analytics if analytics consent given
    if (consent.analytics && !window.gtag) {
      this.loadGoogleAnalytics();
    }

    // Disable GA if consent withdrawn
    if (!consent.analytics && window.gtag) {
      window.gtag('consent', 'update', {
        'analytics_storage': 'denied'
      });
    }

    // Apply marketing cookie settings
    if (window.gtag) {
      window.gtag('consent', 'update', {
        'analytics_storage': consent.analytics ? 'granted' : 'denied',
        'ad_storage': consent.marketing ? 'granted' : 'denied'
      });
    }

    // Dispatch custom event for other scripts
    document.dispatchEvent(new CustomEvent('cookieConsentUpdate', {
      detail: consent
    }));
  }

  loadGoogleAnalytics() {
    // Create and load GA script
    const script = document.createElement('script');
    script.async = true;
    script.src = 'https://www.googletagmanager.com/gtag/js?id=G-T7HFBLX1X1';
    document.head.appendChild(script);

    // Initialize GA
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    window.gtag = gtag;

    gtag('js', new Date());
    gtag('config', 'G-T7HFBLX1X1', {
      anonymize_ip: true,
      cookie_flags: 'SameSite=Strict;Secure'
    });
  }

  // Public method to check if a specific cookie type is allowed
  isAllowed(cookieType) {
    const consent = this.getConsent();
    return consent ? consent[cookieType] || false : false;
  }
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', () => {
    window.cookieConsent = new CookieConsentManager();
  });
} else {
  window.cookieConsent = new CookieConsentManager();
}
</script>

<style>
/* Ensure banner appears above other elements */
#cookie-consent-banner {
  z-index: 9999;
}

/* Smooth animations for toggles */
.peer:checked ~ div {
  background-color: rgb(37 99 235);
}

.peer:checked ~ div:after {
  transform: translateX(100%);
  border-color: white;
}

/* Mobile responsiveness - stack on smaller screens */
@media (max-width: 480px) {
  #cookie-consent-banner {
    bottom: 1rem;
    left: 1rem;
    right: 1rem;
    max-width: none;
  }
}
</style>